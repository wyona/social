/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is The Coop.
 *
 * The Initial Developer of the Original Code is Mozilla.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Myk Melez <myk@mozilla.org>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

[scriptable, uuid(497e7fd2-7120-4c97-8e7c-71153599f451)]
interface nsICoopFacebookService : nsISupports
{
  const short FACEBOOK_SESSION_INACTIVE = 0;
  const short FACEBOOK_SESSION_ACTIVE = 1;
  const short FACEBOOK_SESSION_ACTIVATING = 2;

  // The current state of the session (i.e. whether or not the user is connected
  // to the service).  Will always be one of the constants above.
  readonly attribute short sessionState;

  /**
   * Start a session with the Facebook web service.
   **/
  void startSession();
  void endSession();

  // XXX Ultimately this should be on a timer, not called by a consumer.
  // But at the moment it just gets called by the sidebar on startup.
  void updateFriends();
  void updateLinks();

  nsISupports getFriends();
  nsISupports getLinks(in unsigned long long senderID,
                       in unsigned long long recipientID);

  nsISupports markLinksSeen(in unsigned long long senderID,
                            in unsigned long long recipientID);

  nsISupports getPerson(in unsigned long long personID);
  nsISupports getAccountForPerson(in unsigned long long personID,
                                  in AString serviceID);
};
